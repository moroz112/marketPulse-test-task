import React, { Component } from 'react';
import Assets from 'components/assets';
import Sort from 'components/sort';
import Filter from 'components/filter';
import { connect } from 'react-redux';
import {
	setAssets,
	setSortValue,
	setFilterType,
	setFilterValue
} from 'actions';
import { mock } from 'mock';
import _ from "lodash";

class Layout extends Component {
	componentDidMount() {
		this.assets = [];
		mock.subscribe(
			item => {
				this.assets.push(item);
				if(item.id === 399) {
                	this.props.setAssets(this.assets);
                	this.assets = [];
				}
			}
		);

	}
	sortAndFilterAssets() {
        let {assets, sortValue, filterType, filterValue} = this.props;

        let sortedAssets = _.sortBy(assets, function(item) {
            return item[sortValue];
        });
        if(filterValue) {
        	sortedAssets = _.filter(sortedAssets, (asset) => {
        		return filterValue === String(asset[filterType]).toLowerCase().slice(0, filterValue.length)
			})
		}

		return sortedAssets;

	}
	sortByProperty(prop) {
        this.props.setSortValue(prop);
	}
	setFilterType(type) {
		this.props.setFilterType(type)
	}
	setFilterValue(value) {
        this.props.setFilterValue(value)
	}
	render() {
		return (
			<div>
				Please pick filter type and type some value into input:
				<Filter setFilterType={this.setFilterType.bind(this)} setFilterValue={this.setFilterValue.bind(this)}/>
                Change selector for sorting ===>
				<Sort sortByProperty={this.sortByProperty.bind(this)}/>
				<Assets items={this.sortAndFilterAssets()}/>
			</div>
		)
	}
}
const mapStateToProps = (state) => {
	return {
		assets: state.assets,
		sortValue: state.sortValue,
		filterType: state.filterType,
		filterValue: state.filterValue
	}
};
const mapDispatchToProps = {
	setAssets,
	setSortValue,
	setFilterType,
	setFilterValue
};
export default connect(mapStateToProps, mapDispatchToProps)(Layout);